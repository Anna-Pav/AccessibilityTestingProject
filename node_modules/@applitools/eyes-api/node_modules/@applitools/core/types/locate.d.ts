import type { Region } from '@applitools/utils';
import type { Target, Config, LocateSettings } from './types';
import type { Core as BaseCore } from '@applitools/core-base';
import { type Logger } from '@applitools/logger';
import { type SpecType, type SpecDriver } from '@applitools/driver';
type Options<TSpec extends SpecType> = {
    spec?: SpecDriver<TSpec>;
    core: BaseCore;
    logger: Logger;
};
export declare function makeLocate<TSpec extends SpecType>({ spec, core, logger: defaultLogger }: Options<TSpec>): <TLocator extends string>({ target, settings, config, logger, }: {
    target: Target<TSpec, 'classic'>;
    settings: LocateSettings<TLocator, TSpec>;
    config?: Config<TSpec, "classic"> | undefined;
    logger?: Logger | undefined;
}) => Promise<Record<TLocator, Region[]>>;
export {};
