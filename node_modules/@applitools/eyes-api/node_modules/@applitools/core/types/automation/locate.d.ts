import type { DriverTarget, ImageTarget, LocateSettings, LocateResult } from './types';
import type { Core as BaseCore } from '@applitools/core-base';
import { type Logger } from '@applitools/logger';
import { type SpecType, type SpecDriver } from '@applitools/driver';
type Options<TSpec extends SpecType> = {
    core: BaseCore;
    spec?: SpecDriver<TSpec>;
    logger: Logger;
};
export declare function makeLocate<TSpec extends SpecType>({ spec, core, logger: defaultLogger }: Options<TSpec>): <TLocator extends string>({ settings, target, logger, }: {
    target: DriverTarget<TSpec> | ImageTarget;
    settings: LocateSettings<TLocator, TSpec>;
    logger?: Logger | undefined;
}) => Promise<LocateResult<TLocator>>;
export {};
