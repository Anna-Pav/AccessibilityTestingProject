import type { Core } from './types';
import type { Core as BaseCore } from '@applitools/core-base';
import { type UFGClient } from '@applitools/ufg-client';
import { type NMLClient } from '@applitools/nml-client';
import { type SpecType, type SpecDriver } from '@applitools/driver';
import { type Logger } from '@applitools/logger';
type Options<TSpec extends SpecType> = {
    concurrency: number;
    spec?: SpecDriver<TSpec>;
    clients?: {
        ufg?: UFGClient;
        nml?: NMLClient;
    };
    core?: BaseCore;
    agentId?: string;
    cwd?: string;
    logger?: Logger;
};
export declare function makeCore<TSpec extends SpecType>({ concurrency, spec, clients, core, agentId, cwd, logger, }: Options<TSpec>): Core<TSpec>;
export {};
