import { type Logger } from '@applitools/logger';
export interface TunnelManager {
    create(credentials: TunnelCredentials): Promise<Tunnel>;
    destroy(tunnel: Tunnel): Promise<void>;
    acquire(credentials: TunnelCredentials): Promise<Tunnel[]>;
    release(tunnels: Tunnel[]): Promise<void>;
}
export interface Tunnel {
    tunnelId: string;
    credentials: TunnelCredentials;
}
export interface TunnelCredentials {
    eyesServerUrl: string;
    apiKey: string;
}
export type TunnelManagerSettings = {
    serverUrl?: string;
    groupSize?: number;
    pool?: {
        maxInuse?: number;
        timeout?: {
            idle?: number;
            expiration?: number;
        };
    };
};
export declare function makeTunnelManager({ settings, logger, }: {
    settings?: TunnelManagerSettings;
    logger: Logger;
}): Promise<TunnelManager & {
    close(): Promise<void>;
}>;
