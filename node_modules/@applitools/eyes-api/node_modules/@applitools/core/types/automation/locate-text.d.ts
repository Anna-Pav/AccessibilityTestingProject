import type { DriverTarget, ImageTarget, LocateTextSettings, LocateTextResult } from './types';
import type { Core as BaseCore } from '@applitools/core-base';
import { type Logger } from '@applitools/logger';
import { type SpecType, type SpecDriver } from '@applitools/driver';
type Options<TSpec extends SpecType> = {
    core: BaseCore;
    spec?: SpecDriver<TSpec>;
    logger: Logger;
};
export declare function makeLocateText<TSpec extends SpecType>({ core, spec, logger: defaultLogger }: Options<TSpec>): <TPattern extends string>({ target, settings, logger, }: {
    target: DriverTarget<TSpec> | ImageTarget;
    settings: LocateTextSettings<TPattern, TSpec>;
    logger?: Logger | undefined;
}) => Promise<LocateTextResult<TPattern>>;
export {};
