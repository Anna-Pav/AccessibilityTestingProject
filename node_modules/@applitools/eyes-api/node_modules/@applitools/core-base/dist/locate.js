"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.makeLocate = void 0;
const transform_target_1 = require("./utils/transform-target");
function makeLocate({ requests, logger: defaultLogger }) {
    return async function locate({ target, settings, logger = defaultLogger, }) {
        var _a, _b, _c, _d, _e;
        const account = await requests.getAccountInfo({ settings, logger });
        (_a = settings.normalization) !== null && _a !== void 0 ? _a : (settings.normalization = {});
        settings.normalization.limit = {
            maxImageHeight: Math.min((_c = (_b = settings.normalization.limit) === null || _b === void 0 ? void 0 : _b.maxImageHeight) !== null && _c !== void 0 ? _c : Infinity, account.maxImageHeight),
            maxImageArea: Math.min((_e = (_d = settings.normalization.limit) === null || _d === void 0 ? void 0 : _d.maxImageArea) !== null && _e !== void 0 ? _e : Infinity, account.maxImageArea),
        };
        logger.log('Command "locate" is called with settings', settings);
        target = await (0, transform_target_1.transformTarget)({ target, settings });
        const results = await requests.locate({ target, settings, logger });
        return results;
    };
}
exports.makeLocate = makeLocate;
