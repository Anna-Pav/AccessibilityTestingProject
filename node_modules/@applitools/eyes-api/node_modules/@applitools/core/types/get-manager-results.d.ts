import type { Eyes, GetResultsSettings, TestResultSummary } from './types';
import type { Core as BaseCore } from '@applitools/core-base';
import { type SpecType } from '@applitools/driver';
import { type Logger } from '@applitools/logger';
type Options<TSpec extends SpecType, TType extends 'classic' | 'ufg'> = {
    core: BaseCore<unknown>;
    storage: Eyes<TSpec, TType>[];
    logger: Logger;
};
export declare function makeGetManagerResults<TSpec extends SpecType, TType extends 'classic' | 'ufg'>({ core, storage, logger: defaultLogger, }: Options<TSpec, TType>): ({ settings, logger, }?: {
    settings?: GetResultsSettings<TType> | undefined;
    logger?: Logger | undefined;
}) => Promise<TestResultSummary<TType>>;
export {};
