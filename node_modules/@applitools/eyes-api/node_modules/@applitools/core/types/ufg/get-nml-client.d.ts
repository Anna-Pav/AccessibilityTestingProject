import { type SpecType, type Driver } from '@applitools/driver';
import { type Logger } from '@applitools/logger';
import { type NMLClient, type NMLRequestsConfig } from '@applitools/nml-client';
type Options = {
    config: Omit<NMLRequestsConfig, 'brokerUrl'>;
    client?: NMLClient;
    logger: Logger;
};
export declare function makeGetNMLClient({ config, client, logger: defaultLogger }: Options): (({ driver, logger }: {
    driver: Driver<SpecType>;
    logger?: Logger | undefined;
}) => Promise<NMLClient | null>) & {
    getCachedValues(): Promise<NMLClient | null>[];
    setCachedValue(key: any, value: Promise<NMLClient | null>): void;
    clearCache(): void;
};
export {};
