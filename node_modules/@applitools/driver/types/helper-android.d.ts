import type { Location, Region } from '@applitools/utils';
import { type Logger } from '@applitools/logger';
import { type SpecType, type SpecDriver } from './spec-driver';
import { type Driver } from './driver';
import { type Element } from './element';
export declare class HelperAndroid<T extends SpecType> {
    static make<T extends SpecType>(options: {
        spec: SpecDriver<T>;
        driver: Driver<T>;
        logger: Logger;
    }): Promise<HelperAndroid<T> | null>;
    private readonly _spec;
    private readonly _input;
    private readonly _action;
    private readonly _legacy;
    private readonly _supportAsync;
    private _logger;
    readonly name: 'android' | 'android-legacy';
    constructor(options: {
        spec: SpecDriver<T>;
        input: Element<T>;
        action: Element<T> | null;
        legacy: boolean;
        supportAsync: boolean;
        logger: Logger;
    });
    private _getElementId;
    private _command;
    getContentRegion(element: Element<T>, options?: {
        lazyLoad?: {
            scrollLength?: number;
            waitingTime?: number;
            maxAmountToScroll?: number;
        };
    }): Promise<Region | null>;
    getTouchPadding(): Promise<number | undefined>;
    getRegion(element: Element<T>): Promise<Region | null>;
    scrollToTop(element: Element<T>): Promise<void>;
    scrollBy(element: Element<T>, offset: Location): Promise<void>;
}
