"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.makeTunnelManagerClient = void 0;
const manager_server_1 = require("./manager-server");
const socket_1 = require("@applitools/socket");
const net_1 = require("net");
async function makeTunnelManagerClient({ settings, } = {}) {
    const path = process.env.APPLITOOLS_TUNNEL_MANAGER_SOCK ||
        (process.platform === 'win32' ? '\\\\.\\pipe\\applitools-tunnel-manager' : '/tmp/applitools-tunnel-manager.sock');
    const socket = (0, socket_1.makeSocket)((0, net_1.createConnection)({ path }), { transport: 'ipc' });
    socket.once('error', async (error) => {
        if (['ECONNREFUSED', 'ENOENT'].includes(error.code)) {
            await (0, manager_server_1.makeTunnelManagerServerProcess)({ settings, path, unlink: error.code === 'ECONNREFUSED' });
            socket.use((0, net_1.createConnection)({ path }));
        }
    });
    socket.once('ready', () => socket.target.unref());
    return {
        create: (options) => socket.request('Tunnel.create', options),
        destroy: (options) => socket.request('Tunnel.destroy', options),
        acquire: (options) => socket.request('Tunnel.acquire', options),
        release: (options) => socket.request('Tunnel.release', options),
    };
}
exports.makeTunnelManagerClient = makeTunnelManagerClient;
